(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{103:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),i=(n(0),n(133)),o={id:"asset-exchange",title:"Asset Exchange"},c={unversionedId:"external/getting-started/interop/asset-exchange",id:"external/getting-started/interop/asset-exchange",isDocsHomePage:!1,title:"Asset Exchange",description:"\x3c!--",source:"@site/docs/external/getting-started/interop/asset-exchange.md",slug:"/external/getting-started/interop/asset-exchange",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/asset-exchange",editUrl:"https://github.com/hyperledger-labs/weaver-dlt-interoperability/edit/master/docs/external/getting-started/interop/asset-exchange.md",version:"current",sidebar:"Documentation",previous:{title:"Data Sharing",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/interop/data-sharing"},next:{title:"Hyperledger Fabric",permalink:"/weaver-dlt-interoperability/docs/external/getting-started/enabling-weaver-network/fabric"}},p=[],s={toc:p};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Below are the steps to exercise asset exchange using the CLI ",Object(i.b)("inlineCode",{parentName:"p"},"fabric-cli"),"."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Spin up both ",Object(i.b)("inlineCode",{parentName:"p"},"network1")," and ",Object(i.b)("inlineCode",{parentName:"p"},"network2")," with interoperation chaincode installed along with the ",Object(i.b)("inlineCode",{parentName:"p"},"simpleasset")," application, by running"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"make start-interop CHAINCODE_NAME=simpleasset\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Go to the Fabric Client ",Object(i.b)("inlineCode",{parentName:"p"},"fabric-cli")," directory (the folder ",Object(i.b)("inlineCode",{parentName:"p"},"samples/fabric/fabric-cli")," if you want to exercise the CLI using ",Object(i.b)("inlineCode",{parentName:"p"},"node"),", or the folder ",Object(i.b)("inlineCode",{parentName:"p"},"samples/fabric/go-cli")," if you want to exercise the CLI using ",Object(i.b)("inlineCode",{parentName:"p"},"go"),") and run the below script that performs: setting the enviroment, adding the users ",Object(i.b)("inlineCode",{parentName:"p"},"Alice")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Bob")," to both the networks and finally adding the non-fungible (i.e., bonds) and fungible (i.e., tokens) assets into the accounts of ",Object(i.b)("inlineCode",{parentName:"p"},"Alice")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Bob"),"."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"sh scripts/initAsset.sh\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Check the status of the assets owned by ",Object(i.b)("inlineCode",{parentName:"p"},"Alice")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Bob")," in the the networks ",Object(i.b)("inlineCode",{parentName:"p"},"network1")," and ",Object(i.b)("inlineCode",{parentName:"p"},"network2"),", by running"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"sh scripts/getAssetStatus.sh\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Initiate exchange of bond asset ",Object(i.b)("inlineCode",{parentName:"p"},"bond01:a04")," of ",Object(i.b)("inlineCode",{parentName:"p"},"Bob")," in ",Object(i.b)("inlineCode",{parentName:"p"},"network1")," with token assets ",Object(i.b)("inlineCode",{parentName:"p"},"token1:100")," of ",Object(i.b)("inlineCode",{parentName:"p"},"Alice")," in ",Object(i.b)("inlineCode",{parentName:"p"},"network2"),", by running"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},"./bin/fabric-cli asset exchange-all --network1=network1 --network2=network2 --secret=secrettext --timeout-duration=100 bob:bond01:a04:alice:token1:100\n")),Object(i.b)("p",{parentName:"li"},"Repeat the step 3 to observe the change in the ownership of assets as a result of the ",Object(i.b)("inlineCode",{parentName:"p"},"asset echange")," exercise.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The same asset exchange experiment in the above step, can be carried out by manually triggering below commands in serial order (with the help of ",Object(i.b)("inlineCode",{parentName:"p"},"fabric-cli asset exchange-step")," CLI commands):"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},"./bin/fabric-cli asset exchange-step --step=1 --timeout-duration=3600 --locker=alice --recipient=bob --secret=<hash-pre-image> --target-network=network1 --param=bond01:a03\n./bin/fabric-cli asset exchange-step --step=2 --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n./bin/fabric-cli asset exchange-step --step=3 --timeout-duration=1800 --locker=bob --recipient=alice --hash=<hash-value> --target-network=network2 --param=token1:100\n./bin/fabric-cli asset exchange-step --step=4 --locker=bob --recipient=alice --target-network=network2 --contract-id=<contract-id>\n./bin/fabric-cli asset exchange-step --step=5 --recipient=alice --locker=bob --target-network=network2 --contract-id=<contract-id> --secret=<hash-pre-image>\n./bin/fabric-cli asset exchange-step --step=6 --recipient=bob --locker=alice --target-network=network1 --param=bond01:a03 --secret=<hash-pre-image>\n./bin/fabric-cli asset exchange-step --step=7 --locker=alice --recipient=bob --target-network=network1 --param=bond01:a03\n./bin/fabric-cli asset exchange-step --step=8 --locker=bob --recipient=alice --target-network=network2 --contract-id=<contract-id>\n")),Object(i.b)("p",{parentName:"li"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"asset exchange")," scenario is demonstrated above using an application chaincode ",Object(i.b)("inlineCode",{parentName:"p"},"simpleasset")," and the ",Object(i.b)("inlineCode",{parentName:"p"},"interop")," chaincode, where the application chaincode makes invocations into the ",Object(i.b)("inlineCode",{parentName:"p"},"interop")," chaincode when it needs to lock, claim, or reclaim/unlock assets. However, the same ",Object(i.b)("inlineCode",{parentName:"p"},"asset exchange")," scenario can be demonstrated with the help of just the application chaincode ",Object(i.b)("inlineCode",{parentName:"p"},"simpleassetandinterop")," which also includes the scripts to lock, claim, or reclaim/unlock assets. This requires the steps 1-5 to be exercised with minor modifications as indicated below:"))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Spin up the networks by running the below command (update to step 1)",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"make start CHAINCODE_NAME=simpleassetandinterop\n"))),Object(i.b)("li",{parentName:"ul"},"Replace ",Object(i.b)("inlineCode",{parentName:"li"},"simpleasset")," with ",Object(i.b)("inlineCode",{parentName:"li"},"simpleassetandinterop")," in the ",Object(i.b)("inlineCode",{parentName:"li"},"config.json")," file used to populate the ",Object(i.b)("inlineCode",{parentName:"li"},".env")," file that is part of the script ",Object(i.b)("inlineCode",{parentName:"li"},"initAsset.sh")," (update to step 2)"),Object(i.b)("li",{parentName:"ul"},"Replace ",Object(i.b)("inlineCode",{parentName:"li"},"simpleasset")," with ",Object(i.b)("inlineCode",{parentName:"li"},"simpleassetandinterop")," in the script ",Object(i.b)("inlineCode",{parentName:"li"},"getAssetStatus.sh")," (update to step 3)")))}b.isMDXComponent=!0},133:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),l=b(n),m=a,h=l["".concat(o,".").concat(m)]||l[m]||d[m]||i;return n?r.a.createElement(h,c(c({ref:t},s),{},{components:n})):r.a.createElement(h,c({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);